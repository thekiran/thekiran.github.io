{"version":3,"sources":["Components/Header/img/comic.png","Components/Header/Header.js","Components/Showcase/img/sub1.png","Components/Showcase/img/showcase-sub2.jpg","Components/Showcase/Showcase.js","Components/About/index.jsx","Components/footer/index.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Header","React","useEffect","gsap","from","opacity","duration","delay","x","stagger","y","rotate","className","data-scroll","data-scroll-speed","src","illustration","alt","Showcase","mainImg","subImg","loading","About","id","Footer","App","registerPlugin","ScrollTrigger","scroll","LocomotiveScroll","el","document","querySelector","smooth","multiplier","on","update","scrollerProxy","scrollTop","value","arguments","length","scrollTo","instance","getBoundingClientRect","top","left","width","window","innerWidth","height","innerHeight","pinType","style","transform","set","tl","timeline","defaults","ease","to","create","trigger","scroller","animation","t2","t3","addEventListener","refresh","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a5bf4f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/comic.937ffedc.png\";","import React from 'react'\r\nimport gsap from 'gsap'\r\n\r\nimport './header.css'\r\nimport illustration from './img/comic.png'\r\nconst Header = (//{offsetY}\r\n  ) => {\r\n  React.useEffect(()=>{ \r\n    // gsap.from(heroRef.current,{x:100,scale:0,duration:.3})\r\n\r\n    gsap.from(\"nav\",{opacity:0,duration:1,delay:1})\r\n    gsap.from(\".slide\",{x:-500, opacity:0,stagger:.25,duration:.25,delay:.25})\r\n    gsap.from(\".illustration-img\",{x:400,y:100,rotate:180,opacity:0,duration:.5,delay:.25})\r\n},[])\r\n\r\n  return (\r\n    <div className='header' // style={{transform:`translateY(${offsetY * -.75}px)`}}\r\n   >\r\n      <div className='container-large'>\r\n        <nav>\r\n          <div className='logo'> \r\n            <h1>Kir.</h1> \r\n          </div>\r\n          <ul className='nav-links'>\r\n            <li>\r\n              <button>about</button>\r\n            </li>\r\n            {/* <li>\r\n              <button>darkmode</button>\r\n            </li> */}\r\n          </ul>\r\n        </nav>\r\n        <header // data-scroll-section\r\n        >\r\n        <div className='main-header'data-scroll data-scroll-speed=\"5\">\r\n          <h1 className=\"slide\">\r\n            Hey there, <br />\r\n            my name is Kiran, <br />a freelance Front-End developer.\r\n          </h1>\r\n          <h3 className=\"slide\">\r\n            I craft high-quality, bespoke digital solutions for forward-thinking\r\n            brands, like yours.\r\n          </h3>\r\n          <button className=\"slide\">learn more </button>\r\n        </div>\r\n        <div className=\"main-illustration\" data-scroll data-scroll-speed=\"1\">\r\n      <img //style={{transform:`translateY(${offsetY * .75}px)`}}\r\n   src={illustration} className=\"illustration-img\" alt=\"welcome\"/>\r\n        </div>\r\n        </header> \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","export default __webpack_public_path__ + \"static/media/sub1.f6e9cc4a.png\";","export default __webpack_public_path__ + \"static/media/showcase-sub2.33340aa0.jpg\";","import mainImg from './img/sub1.png'\r\n// import subImg from './img/showcase-sub1.jpg'\r\nimport subImg from './img/showcase-sub2.jpg'\r\n\r\nimport './showcase.css'\r\n\r\nconst Showcase = (//{offsetY}\r\n  ) => {\r\n  return (\r\n    <div className='showcase'>\r\n      <div className='container-large' // data-scroll-container\r\n      >\r\n          <div className=\"showcase-container\" // data-scroll-section\r\n          >\r\n          <div className='showcase-content' data-scroll data-scroll-speed=\"2\" //style={{transform:`translateY(${offsetY * .0001}px)`}}\r\n>\r\n          <h2>I build pixel-perfect web solutions for all devices.</h2>\r\n          <button>view my work</button>\r\n        </div>\r\n        <div className='showcase-main'  // data-scroll-section\r\n        >\r\n          <div className=\"mainImg\" data-scroll data-scroll-speed=\"7\"> \r\n          <img src={mainImg}  //style={{transform:`translateY(${offsetY * -.4}px)`}}\r\n alt=''  />\r\n          </div>\r\n          <div className=\"subImg\"   data-scroll\r\n                data-scroll-speed=\"2\"\r\n                // data-scroll-target=\".showcase\"\r\n                >\r\n          <img src={subImg} \r\n                loading=\"lazy\" //style={{transform:`translateY(${offsetY * -.2}px)`}}\r\n alt='' /> </div>\r\n        </div>\r\n          </div> \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Showcase\r\n","import React from 'react';\r\nimport gsap from 'gsap'\r\n\r\nimport './about.css'\r\n\r\nconst About = () => {\r\n    React.useEffect(()=>{\r\n        // gsap.from(\".about-col\",{y:60,opacity:0,duration:1,stagger:.5,scrollTrigger:\".about\"})\r\n    },[])\r\n    return ( <div className=\"about\" //data-scroll-container\r\n    >\r\n        <div className=\"container-large\" //data-scroll-section\r\n        >\r\n            <h2 id=\"about-title\" data-scroll data-scroll-speed=\"3\">I can take responsibility for one part <br/>\r\n            of your project, or deliver the whole solution.\r\n            \r\n            </h2>\r\n                <div className=\"about-row\" data-scroll data-scroll-speed=\"3\" >\r\n                    <div className=\"about-col\"  >\r\n                        <h3>Web Design and Development</h3>\r\n                        <p>\r\n                            I build bespoke, scalable web applications using modern web technologies and tools. I ensure all websites adhere to insustry standards and deliver the best possible user experience.\r\n                        </p>\r\n                    </div> \r\n                    <div className=\"about-col\"  >\r\n                        <h3>Responsive Design</h3>\r\n                        <p>\r\n                        Mobile phones now account for more than half of all internet traffic which is why I ensure that all websites I develop are responsive; this means that the website can adjust to any screen size or device.\r\n                        </p>\r\n                    </div> \r\n            </div>\r\n            <div className=\"about-row\" data-scroll data-scroll-speed=\"3\">\r\n                 <div className=\"about-col\" >\r\n                 <h3> E-Commerce\r\n                        </h3>\r\n                        <p> \r\nI utilize powerfull platforms and tools to build scalable, purpose-driven e-Commerce solutions. Your bespoke online store will provide a seamless user experience, that turns leads in to customers.\r\n                        </p>\r\n                    </div> \r\n                 <div className=\"about-col\" >\r\n                        <h3> Content Management</h3>\r\n                        <p> It's important that you're able to self-manage your website from any place at any time, which is why I develop content management systems that give you control over your website data.\r\n                        </p>\r\n                    </div> \r\n                    \r\n                    </div>\r\n            <div className=\"about-row\" data-scroll data-scroll-speed=\"3\">  <div className=\"about-col\" >\r\n                        <h3>Website Management </h3>\r\n                        <p> I provide various website management options which include - updating content, backing-up important data, monitoring and security/software updates.\r\n                        </p>\r\n                    </div> \r\n                 <div className=\"about-col\" >\r\n                        <h3>SEO </h3>\r\n                        <p> Standard on-page SEO practices are included with every website I develop. This allows your website to rank higher in search engine results and potentially drive more traffic to your site.\r\n                      \r\n                        </p>\r\n                    </div> </div>\r\n        </div> \r\n    </div> );\r\n}\r\n \r\nexport default About;","import './footer.css'\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container-large\">\r\n                <div className=\"contact-footer\">\r\n                    <h3>Let's build something great together.\r\n                    </h3>\r\n                    <p>\r\n                        If you'd like to start a new project, need help with an existing project or have any other enquiry, please get in touch.\r\n                    </p>\r\n                    <h5>\r\n                        kirankumargs02@gmail.com\r\n                    </h5>\r\n                </div>\r\n                <div className=\"main-footer\">\r\n                    <div className='logo'> \r\n                        <h1>Kir.</h1> \r\n                    </div>\r\n                    <ul className='footer-links'>\r\n                        <li>\r\n                        <button>github</button>\r\n                        </li>\r\n                        <li>\r\n                        <button>linkedin</button>\r\n                        </li>\r\n                    </ul>\r\n                    </div>\r\n            </div> \r\n        </div>);\r\n}\r\n\r\nexport default Footer;","import React, { useState } from 'react'; \nimport './base.css';\nimport Header from './Components/Header/Header';\nimport Showcase from './Components/Showcase/Showcase';\n// import like from './like.svg'\n\nimport gsap from 'gsap'\nimport { ScrollTrigger } from 'gsap/all';\nimport LocomotiveScroll from 'locomotive-scroll';\nimport About from './Components/About';\nimport Footer from './Components/footer';\n\nfunction App() {\n  // const [darkMode, setDarkMode] = useState(true)\n\n  // const theme = () => {\n  //   if(darkMode) {\n  //     return 'app-dark'\n  //   } else{\n  //     return 'app-light'\n  //   }\n  // }\n    // let offsetY = window.pageYOffset\n    // const [offsetY, setOffsetY] = React.useState(0)\n    // const handleScroll = () => setOffsetY(window.pageYOffset) \n  \n    gsap.registerPlugin(ScrollTrigger) \n   \n    React.useEffect(()=>{\n        const scroll = new LocomotiveScroll({\n          el: document.querySelector('[data-scroll-container]'),\n          smooth: true,\n          multiplier:0.5\n        });\n\n        scroll.on(\"scroll\", ScrollTrigger.update);\n        ScrollTrigger.scrollerProxy(\"[data-scroll-container]\", {\n          scrollTop(value) {\n            return arguments.length ? scroll.scrollTo(value, 0, 0) :    scroll.scroll.instance.scroll.y;\n            }, // we don't have to define a scrollLeft because we're only scrolling vertically.\n            getBoundingClientRect() {\n              return {top: 0, left: 0, width: window.innerWidth, height: window.innerHeight};\n            },  // LocomotiveScroll handles things completely differently on mobile devices - it doesn't even transform the container at all! So to get the correct behavior and avoid jitters, we should pin things with position: fixed on mobile. We sense it by checking to see if there's a transform applied to the container (the LocomotiveScroll-controlled element).\n            pinType: document.querySelector(\"[data-scroll-container]\").style.transform ? \"transform\" : \"fixed\"\n          });\n \n          gsap.set(\".about-col\",{y:50,opacity:0})\n          gsap.set(\".contact-footer\",{y:100,opacity:0})\n          gsap.set(\".main-footer\",{y:-50,opacity:0})\n\n          let tl = gsap.timeline({defaults:{ease:\"none\"}})\n            .to(\".about-col\", {y:0,opacity:1, duration:1,stagger:.1}) \n \n            ScrollTrigger.create({\n              trigger:\".about-row\",\n              // start:\"0%\",\n              // end:\"+=300\",\n              scroller:\"[data-scroll-container]\",\n              animation:tl,\n              // scrub:true,\n              // pin:true\n            })\n\n            let t2 = gsap.timeline({defaults:{ease:\"none\"}})\n            .to(\".contact-footer\", {y:0,opacity:1, duration:1}) \n \n            ScrollTrigger.create({\n              trigger:\".contact-footer\",\n              // start:\"0%\",\n              // end:\"+=300\",\n              scroller:\"[data-scroll-container]\",\n              animation:t2,\n              // scrub:true,\n              // pin:true\n            })\n\n            let t3 = gsap.timeline({defaults:{ease:\"none\"}})\n            .to(\".main-footer\", {y:0,opacity:1, duration:1}) \n \n            ScrollTrigger.create({\n              trigger:\".main-footer\",\n              // start:\"0%\",\n              // end:\"+=300\",\n              scroller:\"[data-scroll-container]\",\n              animation:t3,\n              // scrub:true,\n              // pin:true\n            })\n\n            // each time the window updates, we should refresh ScrollTrigger and then update LocomotiveScroll. \n            ScrollTrigger.addEventListener(\"refresh\", () => scroll.update());\n\n            // after everything is set up, refresh() ScrollTrigger and update LocomotiveScroll because padding may have been added for pinning, etc.\n            ScrollTrigger.refresh(); \n\n      // window.addEventListener(\"scroll\",handleScroll) \n      //return () => window.removeEventListener(\"scroll\",handleScroll)\n\n        // // Get the id of the <path> element and the length of <path>\n        // var triangle = document.getElementById(\"triangle\");\n        // var length = triangle.getTotalLength();\n        \n        // // The start position of the drawing\n        // triangle.style.strokeDasharray = length;\n        \n        // // Hide the triangle by offsetting dash. Remove this line to show the triangle before scroll draw\n        // triangle.style.strokeDashoffset = length;\n        \n        // function myFunction() {\n        // var scrollpercent = (document.body.scrollTop + document.documentElement.scrollTop) / (document.documentElement.scrollHeight - document.documentElement.clientHeight);\n        \n        //   var draw = length * scrollpercent;\n          \n        //   // Reverse the drawing (when scrolling upwards)\n        //   triangle.style.strokeDashoffset = length - draw;\n        // }\n\n        //  // Find scroll percentage on scroll (using cross-browser properties), and offset dash same amount as percentage scrolled\n        //  window.addEventListener(\"scroll\",myFunction)\n        // //  window.addEventListener(\"scroll\",handleScroll) \n        \n        // return () => window.removeEventListener(\"scroll\",myFunction)\n  \n\n      // window.addEventListener(\"scroll\",(e)=>{\n        //      myFunction()\n        //      handleScroll()\n        //    })\n        //   //  window.addEventListener(\"scroll\",handleScroll) \n          \n        // return () => {\n        //  return window.removeEventListener(\"scroll\",(e)=>{\n        //     myFunction()\n        //     handleScroll()\n        //   })\n        // }\n  \n\n    },[])\n  return (\n    <div //className={`app ${theme()}`}\n    >\n      <Header //offsetY={offsetY}\n       />\n      <Showcase //offsetY={offsetY}\n      />\n      <About />\n      <Footer />\n      {/* <div className=\"space\" style={{height:'100px',background:'#000'}}></div> */}\n      {/* <img src={like}/> */}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import './scss/main.sass'\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}